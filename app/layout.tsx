// "use client"
// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// import { LandingNavbar } from "./components/LandingNavbar";
// import Footer from "./components/footer";
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };



// import { AuthProvider } from './context/AuthContext';
// import React from 'react';
// import DashboardNavbar from "./components/dashboardNavbar";
//  // Assuming you have a Navbar component
//  import { useAuth } from './context/AuthContext';
// export default function RootLayout({ 
//   children 
// }: { 
//   children: React.ReactNode 
// }) {
//   const { isAuthenticated } =  useAuth();

//   return (
//     <html lang="en">
//       <body className="flex flex-col min-h-screen">
        
//         {isAuthenticated ? <DashboardNavbar /> : <LandingNavbar />}
//         <main className="flex-grow">{children}</main>
//         <Footer />
       
//       </body>
//     </html>
//   );
// }


"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from './context/AuthContext';
import React from 'react';
import { LandingNavbar } from "./components/LandingNavbar";
import DashboardNavbar from "./components/dashboardNavbar";
import Footer from "./components/footer";
import { useAuth } from "./context/AuthContext";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({ 
  children 
}: { 
  children: React.ReactNode 
}) {
  return (
    <html lang="en">
      <body className="flex flex-col min-h-screen">
        {/* Wrap everything with AuthProvider */}
        <AuthProvider>
          {/* Create a client component wrapper for navbar logic */}
          <NavbarWrapper />
          <main className="flex-grow">{children}</main>
          <Footer />
        </AuthProvider>
      </body>
    </html>
  );
}

// Separate client component for navbar logic
function NavbarWrapper() {
  const { isAuthenticated } = useAuth(); // Now safe to use here

  return isAuthenticated ? <DashboardNavbar /> : <LandingNavbar />;
}
